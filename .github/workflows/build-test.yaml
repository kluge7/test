name: Build and Test

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # Checkout the repository to the workspace
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Install ROS 2 Humble and required packages
      - name: Install ROS 2 Humble packages
        run: |
          sudo apt update
          sudo apt install -y software-properties-common curl gnupg lsb-release

          # Add the ROS 2 GPG key and repository
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

          # Update and install ROS 2 Humble desktop
          sudo apt update
          sudo apt install -y ros-humble-desktop python3-colcon-common-extensions python3-rosdep lcov

      # Set up the ROS 2 workspace
      - name: Set up ROS 2 Workspace
        run: |
          source /opt/ros/humble/setup.bash

          # Create workspace and copy repository files
          mkdir -p ros_ws/src
          cd ros_ws/src
          cp -r $GITHUB_WORKSPACE/* .

          # Clone vortex-msgs repository into workspace
          git clone https://github.com/vortexntnu/vortex-msgs.git
          cd ..

          # Build the workspace (just to ensure everything is set)
          colcon build
          source install/setup.bash

      # Install dependencies with rosdep
      - name: Install dependencies
        run: |
          source /opt/ros/humble/setup.bash
          cd ros_ws
          sudo rosdep init
          rosdep update --include-eol-distros
          rosdep install --from-paths src --ignore-src -r -y

      # Build the ROS 2 workspace with packages
      - name: Build ROS 2 Workspace
        run: |
          source /opt/ros/humble/setup.bash
          cd ros_ws
          colcon build

      # Run tests using colcon test
      - name: Run Tests
        run: |
          source /opt/ros/humble/setup.bash
          cd ros_ws
          colcon test --event-handlers console_cohesion+

      # Generate test result summary
      - name: Test Results Summary
        run: |
          cd ros_ws
          colcon test-result --verbose
