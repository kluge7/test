name: Source Build on Push
# Action to build ROS 2 packages from source on push event

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-22.04  # Default OS, can be overridden via env

    env:
      ROS_DISTRO: humble  # Default ROS distro, can be overridden via env
      OS_NAME: ubuntu-22.04  # Default OS name, can be overridden via env
      REF: ${{ github.ref_name }}  # Git branch to checkout (from push event)
      CCACHE_DIR: .ccache  # Local path to store cache
      WORKSPACE_PATH: ${{ github.workspace }}/vortex_ws
      GITHUB_REPOSITORY_NAME: ${{ github.event.repository.name }}

    steps:
      - name: Setup ROS 2 Environment
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{ env.ROS_DISTRO }}

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.WORKSPACE_PATH }}/src/${{ env.GITHUB_REPOSITORY_NAME }}
          ref: ${{ env.REF }}

      - name: Cache ccache
        uses: actions/cache@v3
        with:
          path: ${{ env.WORKSPACE_PATH }}/${{ env.CCACHE_DIR }}
          key: ${{ runner.os }}-ccache-${{ env.REF }}-${{ hashFiles('**/CMakeLists.txt', '**/*.cpp', '**/*.h', '**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-ccache-

      - name: Import Dependencies with vcs
        run: |
          cd ${{ env.WORKSPACE_PATH }}/src
          if [ -f ${{ env.WORKSPACE_PATH }}/src/${{ env.GITHUB_REPOSITORY_NAME }}/ros2.repos ]; then
            echo "Found ros2.repos file, importing dependencies..."
            vcs import . < ${{ env.WORKSPACE_PATH }}/src/${{ env.GITHUB_REPOSITORY_NAME }}/ros2.repos
          else
            echo "No ros2.repos file found, skipping dependency import."
          fi        

      - name: Install Package Dependencies with rosdep
        run: |
          cd ${{ env.WORKSPACE_PATH }}
          source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
          rosdep update
          rosdep install --from-paths src --ignore-src -r -y

      - name: Build ROS 2 Workspace
        run: |
          cd ${{ env.WORKSPACE_PATH }}
          source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
          colcon build --event-handlers console_cohesion+ --cmake-args -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

      - name: Run Tests
        run: |
          cd ${{ env.WORKSPACE_PATH }}
          source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
          colcon test --event-handlers console_direct+

      - name: Test Results Summary
        run: |
          cd ${{ env.WORKSPACE_PATH }}
          source /opt/ros/${{ env.ROS_DISTRO }}/setup.bash
          colcon test-result --verbose

      - name: Show ccache stats
        run: |
          ccache -s
