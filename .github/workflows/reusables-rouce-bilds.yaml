name: Reusable Source Build
# Reusable GitHub Actions workflow to build all ROS 2 packages from source
on:
  workflow_call:
    inputs:
      ros_distro:
        description: "ROS Distribution (e.g., humble, jazzy)"
        required: false
        default: "humble"
        type: string
      os_name:
        description: "Operating System to run the workflow on"
        required: false
        default: "ubuntu-22.04"
        type: string
      ref:
        description: "Git branch or tag to checkout"
        required: false
        default: ${{ github.event.repository.default_branch }}
        type: string
      vcs_repo_file_url:
        description: "URL to the vcs repositories file"
        required: false
        default: ""
        type: string
      skip_tests:
        description: "Skip running tests"
        required: false
        default: false
        type: boolean
      gcc_version:
        description: "GCC version to install"
        required: false
        default: "11" # Default GCC version commonly available on Ubuntu 22.04
        type: string
      setup_script:
        description: "Script to manage dependencies not supported by rosdep or pin package versions"
        required: false
        default: ""
        type: string
jobs:
  build:
    runs-on: ${{ inputs.os_name }}
    steps:
      - name: set gcc and g++ version
        if: inputs.gcc_version != '11'
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt-get update
          sudo apt-get install gcc-${{ inputs.gcc_version }} g++-${{ inputs.gcc_version }} -y
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${{ inputs.gcc_version }} 60
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${{ inputs.gcc_version }} 60
      - name: setup ROS 2 environment
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: ${{ inputs.ros_distro }}
      - name: Download and execute setup script if provided
        if: inputs.setup_script != ''
        run: |
          SCRIPT_NAME=${{ inputs.setup_script }}
          FILE_URL="https://raw.githubusercontent.com/${{ github.repository }}/${{ inputs.ref }}/${SCRIPT_NAME}"
          echo "Checking if ${SCRIPT_NAME} exists at $FILE_URL"
          if curl --head --fail "$FILE_URL"; then
            echo "Downloading and executing ${SCRIPT_NAME}"
            curl -O "$FILE_URL"
            chmod +x "${SCRIPT_NAME}"
            ./"${SCRIPT_NAME}"
          else
            echo "${SCRIPT_NAME} file not found at $FILE_URL"
          fi      
      - name: build and test ROS 2 packages
        uses: ros-tooling/action-ros-ci@v0.3
        with:
          target-ros2-distro: ${{ inputs.ros_distro }}
          vcs-repo-file-url: ${{ inputs.vcs_repo_file_url }}
          skip-tests: ${{ inputs.skip_tests }}
