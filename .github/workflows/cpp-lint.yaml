name: Python Format and Lint (isort, black, pylint)

on: [push]

jobs:
  clang_format_linter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Run clang-format linter
        uses: DoozyX/clang-format-lint-action@v0.18.1
        with:
          source: "."  # Lint the whole repository
          exclude: "./lib"  # Exclude the lib directory
          extensions: "h,cpp,c"  # Include header and C++ files
          clangFormatVersion: 18
          inplace: true  # Automatically format the files

      - name: Commit isort changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Isort Robot
          author_email: isort-robot@example.com
          message: "Committing isort changes"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pylint:
    runs-on: ubuntu-latest
    needs: clang_format_linter
    steps:
      - name: Checkout repository on the updated branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}  # Ensure it's the updated branch

      # Run the C++ linter (cpp-linter) with file annotations and thread comments
      - name: Run C++ Linter (cpp-linter)
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: 'file'  # Use the .clang-format config file from the repo
          tidy-checks: ''  # Use the .clang-tidy config file from the repo
          file-annotations: true  # Enable file annotations on specific lines with issues
          thread-comments: ${{ github.event_name == 'pull_request' && 'update' }}  # Use thread comments for PR feedback
